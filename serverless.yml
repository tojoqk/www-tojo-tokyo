#lang aws-lambda-serverless
service: www-tojoqk-com

provider:
  name: aws
  runtime: provided
  region: ap-northeast-1
  memorySize: 1024
  timeout: 5
  stage: ${env:STAGE}
  logRetentionInDays: 30
  resourcePolicy:
    - Effect: Allow
      Principal: "*"
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*/*/*
      Condition:
        IpAddress:
          aws:SourceIp: ${self:custom.sourceIP.${self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:table/${self:custom.urlsTable.name}"
  environment:
    URLS_TABLE_NAME: "${self:custom.urlsTable.name}"

custom:
  suffix:
    production: ""
    development: -dev
  sourceIP:
    production: 0.0.0.0/0
    development: ${env:SOURCE_IP}/32
  customDomain:
    region: ap-northeast-1
    domainName: www${self:custom.suffix.${self:provider.stage}}.tojoqk.com
    basePath: ''
    certificateName: "*.tojoqk.com"
    stage: ${self:provider.stage}
    createRoute53Record: true
  layer: arn:aws:lambda:ap-northeast-1:488514468674:layer:bootstrap:2
  urlsTable:
    name: ${self:provider.stage}-www-tojoqk-com-urls
    readCapacityUnits:
      production: 15
      development: 1
    writeCapacityUnits:
      production: 15
      development: 1

plugins:
  - serverless-domain-manager

package:
  exclude:
    - '*/**'
    - '.*/**'
  include:
    - bootstrap


functions:
  root:
    handler: main.root
    events:
      - http:
          method: get
          path: /
    layers:
      - ${self:custom.layer}
  web:
    handler: main.web
    events:
      - http:
          method: get
          path: "/{proxy+}"
    layers:
      - ${self:custom.layer}

resources:
  Resources:
    UrlsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.urlsTable.readCapacityUnits.${self:provider.stage}}
          WriteCapacityUnits: ${self:custom.urlsTable.writeCapacityUnits.${self:provider.stage}}
        TableName: ${self:custom.urlsTable.name}
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
